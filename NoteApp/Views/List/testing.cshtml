@using NoteApp.Models;
@model ListViewModel

@*@model NoteApp.Models.NotesModel*@



@using (Html.BeginForm("testing", "List", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <form>
        <!-- Example single danger button -->
        <div class="btn-group">
            <button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                Add Notes
            </button>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item" onclick="ShowTextbox();">Add Text</a></li>
                <li><a class="dropdown-item" onclick="ShowFile();">Add File</a></li>
            </ul>
        </div>
        <div class="mb-3" id="text" style="display:none">
            @Html.TextAreaFor(model => model.NotesModel.NoteDesciption, new { @class = "form-control", @placeholder = "Enter Note Description" })

        </div>
        <div class="mb-3" id="file" style="display:none">
            @Html.TextBoxFor(m => m.File, new { type = "file", @class = "form-control", @onchange = "readURL(this);" })

            @*<input type='file' name="file" class="form-control" onchange="readURL(this);" />*@<br />
            <img id="img" alt="" />
            <div class="embed-responsive embed-responsive-16by9">
                <iframe id="vedio"></iframe>
            </div>
        </div>
        <div>
            <select class="form-control" multiple="multiple" id="tagData" onchange="test();" name="Tags">

            </select>
        </div>
        <div class="mb-3 ">
        </div>
        <button type="submit" class="btn btn-primary">Submit</button>
    </form>

}
<script>
    $(document).ready(function () {
        console.log("ready!");
        $("img").hide();
        $("iframe").hide();
 
    });
    function ShowTextbox() {
        $("#text").show();
        $("#file").hide();
    }
    function ShowFile() {
        $("#file").show();
        $("#text").hide();

    }
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            var fileTypes = ['jpg', 'jpeg', 'png'];  //acceptable file types
            var filevedio = ['mp4', 'ever', 'you', 'want'];  //acceptable file types
            var extension = input.files[0].name.split('.').pop().toLowerCase(),  //file extension from input file
                isImages = fileTypes.indexOf(extension) > -1;  //is extension in acceptable types
            isVideos = filevedio.indexOf(extension) > -1;  //is extension in acceptable types
            console.log(extension);
            console.log(isImages);
            console.log(isVideos);
            var reader = new FileReader();
            reader.onload = function (e) {
                if (isImages) {
                    $("img").show();
                    $("iframe").hide();
                    $('#img')
                        .attr('src', e.target.result)
                        .width(280)
                        .height(200);
                    console.log("img uplaoaded");
                }
                else if (isVideos) {
                    $("img").hide();
                    $("iframe").show();
                    $('#vedio')
                        .attr('src', e.target.result)
                        .width(280)
                        .height(200);
                    console.log("vedio uplaoaded");
                }

            };
            reader.readAsDataURL(input.files[0]);
        }
    }


        function test()
{
var a =$( "#tagData" ).val();
        console.log(a);

     }
$("#tagData").select2({
            tags: true,
        tokenSeparators: [',', ' ']
    })

   
</script>

@*@foreach (var item in Model.ListModels)
    {

    }

    @foreach (var item in Model.NotesModel)
    {

    }*@



